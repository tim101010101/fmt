Expr -> RETURN AssignmentExpr | AssignmentExpr

AssignmentExpr -> AssignmentExpr "=" TernaryExpr | TernaryExpr

TernaryExpr -> (TernaryExpr | BinaryExpr) "?" Expr ":" Expr | BinaryExpr

BinaryExpr -> BinaryExpr
       ( "+" | "-" | "*" | "/"
       | "&" | "|" | "^" | "~" | "<<" | ">>" | ">>>"
       | "==" | "===" | "<" | ">" | "<=" | ">="
       | INSTANCE_OF | IN )
         UnaryExpr
       | UnaryExpr

UnaryExpr -> (UnaryExpr ("++" | "--"))
       | (("++" | "--" | "!" | TYPE_OF | DELETE) UnaryExpr)
       | FunctionCallExpr
       | ValueAccessExpr

FunctionCallExpr -> (FunctionCallExpr | ValueAccess) "(" (TernaryExpr ("," TernaryExpr)*)? ")"
                  | ValueAccessExpr
                  | Pri

ValueAccessExpr -> (ValueAccessExpr | FunctionCallExpr) "." Pri
                  | FunctionCallExpr
                  | Pri

Pri -> literal | ID | "(" AssignmentExpr ")"