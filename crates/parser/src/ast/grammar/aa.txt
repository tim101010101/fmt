// function a() {}
// function (a {})

// FunctionDeclaration -> [FUNCTION_KW] [ID] SequenceExpr BlockExpr
// SequenceExpr -> [OPEN_PAREN] ([ID] ([COMMA] [ID])*)?  [CLOSE_PAREN]
// BlockExpr -> [OPEN_BRACE] Expr [CLOSE_BRACE]

fn parse_function_declaration() {
    parser.start(FUNCTION_KW)
          .and(ID)
          .and(SequenceExpr)
          .and(BlockExpr)
          .finish()
}
fn parse_sequence_expr() {
    parser.start(OPEN_PAREN)
          .zero_or_one(
                parser.start(ID)
                      .zero_or_more(
                            parser.start(COMMA)
                                  .and(ID)
                                  .finish()
                      )
                      .finish()
          )
          .and(CLOSE_PAREN)
          .finish()
}
fn parse_block_expr() {
    parser.start(OPEN_BRACE)
          .zero_or_more(Expr)
          .and(CLOSE_BRACE)
          .finish()
}
